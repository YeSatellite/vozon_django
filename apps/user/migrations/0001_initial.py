# Generated by Django 2.0.3 on 2018-04-03 09:01

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        ('info', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('phone', models.CharField(max_length=30, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('avatar', models.ImageField(null=True, upload_to='avatars/')),
                ('dob', models.DateField()),
                ('type', models.CharField(choices=[('client', 'client'), ('carrier', 'carrier')], max_length=10)),
                ('is_staff', models.BooleanField(default=False)),
                ('sms_code', models.CharField(max_length=10, null=True)),
                ('citizenship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='info.Country')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='info.City')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
